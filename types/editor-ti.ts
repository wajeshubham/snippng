/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const SelectOptionInterface = t.iface([], {
  "id": "string",
  "label": "string",
});

export const SnippngWindowControlsType = t.union(t.lit("mac-left"), t.lit("mac-right"), t.lit("windows-left"), t.lit("windows-right"));

export const SnippngEditorConfigInterface = t.iface([], {
  "ownerUid": t.opt("string"),
  "uid": t.opt("string"),
  "code": "string",
  "editorFontSize": "number",
  "editorWidth": "number",
  "editorWindowControlsType": "SnippngWindowControlsType",
  "gradients": t.array("string"),
  "gradientAngle": "number",
  "fileName": "string",
  "hasDropShadow": "boolean",
  "lineHeight": "number",
  "paddingHorizontal": "number",
  "paddingVertical": "number",
  "rounded": "boolean",
  "selectedLang": "SelectOptionInterface",
  "selectedTheme": "SelectOptionInterface",
  "showFileName": "boolean",
  "showLineNumbers": "boolean",
  "snippetsName": "string",
  "wrapperBg": "string",
  "bgImageVisiblePatch": t.union("string", "null"),
  "bgBlur": "number",
});

export const CustomOmit = t.name("any");

export const SnippngExportableConfig = t.name("any");

export const SnippngEditorContextInterface = t.iface([], {
  "editorConfig": "SnippngEditorConfigInterface",
  "handleConfigChange": t.func(t.func("void", t.param("value", "V")), t.param("key", "K")),
  "setEditorConfig": t.func("void", t.param("config", "SnippngEditorConfigInterface")),
});

const exportedTypeSuite: t.ITypeSuite = {
  SelectOptionInterface,
  SnippngWindowControlsType,
  SnippngEditorConfigInterface,
  CustomOmit,
  SnippngExportableConfig,
  SnippngEditorContextInterface,
};
export default exportedTypeSuite;
